# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "ata_piix" "mptspi" "uhci_hcd" "ehci_pci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  # clear the root volume on every boot
  boot.initrd.postDeviceCommands = lib.mkAfter ''
    mkdir /mnt
    mount -t btrfs /dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812 /mnt
    btrfs subvolume delete /mnt/@root
    btrfs subvolume snapshot /mnt/root-blank /mnt/@root
  '';

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812";
      fsType = "btrfs";
      options = [ "subvol=@" "noatime" "space_cache=v2" "compress=zstd" "ssd" "discard=async" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812";
      fsType = "btrfs";
      options = [ "subvol=@home" "noatime" "space_cache=v2" "compress=zstd" "ssd" "discard=async" ];
    };

  fileSystems."/var" =
    { device = "/dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812";
      fsType = "btrfs";
      options = [ "subvol=@var" "noatime" "space_cache=v2" "compress=zstd" "ssd" "discard=async" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812";
      fsType = "btrfs";
      options = [ "subvol=@swap" "noatime" "space_cache=v2" "ssd" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812";
      fsType = "btrfs";
      options = [ "subvol=@nix" "noatime" "space_cache=v2" "compress=zstd" "ssd" "discard=async" ];
    };

  fileSystems."/root" =
    { device = "/dev/disk/by-uuid/37d04be5-261b-45b6-be9f-0dbeee70f812";
      fsType = "btrfs";
      options = [ "subvol=@root" "noatime" "space_cache=v2" "compress=zstd" "ssd" "discard=async" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/1D48-EDFF";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens33.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
